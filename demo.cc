#include "IF_CONSTEXPR.hh"

#include <iostream>

int main() {
    int a=3;
    int b=4;

    // First, demostrate the macro-free implementation. The structure
    // of these two statements look pretty strange, but it makes sense
    // as this is what is generated by the macros.

    std::cout
        <<  forward_as_tuple_for_if_constexpr(a,b)
            .if_constexpr(
                    std::integral_constant<bool, true>{}
                ,   [&](auto&&a,auto&&b){ return a*b; }
                ,   [&](auto&&a,auto&&b){ return a(b); }
               )
        <<'\n';
    std::cout
        <<  forward_as_tuple_for_if_constexpr(a,b)
            .if_constexpr(
                    std::integral_constant<bool, false>{}
                ,   [&](auto&&a,auto&&b){ return a(b); }
                ,   [&](auto&&a,auto&&b){ return a+b; }
               )
        <<'\n';

    // Next, the demonstrations of the IF_CONSTEXPR macro

    std:: cout <<    IF_CONSTEXPR    (       true,
           a*b
    )(
           a+b
    )
    << '\n';
    std:: cout <<    IF_CONSTEXPR    ( a,    false,
           a(b)
    )(
           a+b
    )
    << '\n';
    int c=5;
    std:: cout <<    IF_CONSTEXPR    ( a,b,c,  true,
           a*b*c
    )(
           a(b) + c + b(a)
    )
    << '\n';
}
